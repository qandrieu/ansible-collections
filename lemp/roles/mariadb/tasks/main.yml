---
- name: Add MariaDB gpg key
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: "{{ maria_db_key }}"

- name: Install repository MariaDB
  apt_repository:
    repo: "{{ maria_db_repo }}"
    state: present
    update_cache: yes

- name: Update repositories
  apt: update_cache=yes

- name: Install MariaDB & mysql-python
  apt: name={{ item }} state=latest update_cache=yes
  loop: [ 'mariadb-server', 'python3-pymysql' ]

- name: Start service mysqld
  action: service name=mysqld state=started

# MariaDB Configuration
- name: Sets the root password
  mysql_user:
    name: root
    password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true
  ignore_errors: true

- name: Copy .my.cnf file with root password credentials
  template: 
    src: templates/root/.my.cnf.j2 
    dest: /root/.my.cnf 
    owner: root 
    mode: 0600

- name: Removes all anonymous user accounts
  mysql_user:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: ''
    host_all: yes
    state: absent
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: false 

- name: Removes MySQL test database
  mysql_db:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: test
    state: absent
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Create App MySQL user and grants access to App DB
  mysql_user:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: "{{ mysql_app_user }}"
    password: "{{ mysql_app_pass }}"
    priv: "{{ mysql_app_db }}.*:ALL"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: false

- name: Creates App Database
  mysql_db:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: "{{ mysql_app_db }}"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock

